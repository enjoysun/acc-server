<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunjia.lark.mapper.SysRoleMapper">

    <resultMap type="com.yunjia.lark.model.entity.SysRole" id="SysRoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="level" column="level" jdbcType="INTEGER"/>
        <result property="pid" column="pid" jdbcType="INTEGER"/>
        <result property="seq" column="seq" jdbcType="INTEGER"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="updatedBy" column="updated_by" jdbcType="VARCHAR"/>
        <result property="ctime" column="ctime" jdbcType="TIMESTAMP"/>
        <result property="utime" column="utime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="SysRoleMap">
        select
          id, code, name, status, description, level, pid, seq, created_by, updated_by, ctime, utime
        from lark_security.sys_role
        where id = #{id} and `status`=0
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="SysRoleMap">
        select
          id, code, name, status, description, level, pid, seq, created_by, updated_by, ctime, utime
        from lark_security.sys_role
        where `status`=0
        limit #{offset}, #{limit}
    </select>


    <!--查询用户所有直属角色-->
    <select id="queryRolesByUserId" resultMap="SysRoleMap">
        select
        r.id, r.code, r.name, r.status, r.description, r.level, r.pid, r.seq, r.created_by, r.updated_by, r.ctime, r.utime
        from sys_role as r
        left join sys_user_role as ur
        on r.id=ur.rid
        where ur.uid=#{id} and r.`status`=0
    </select>

    <!--查询用户所有用户组，并连带用户组所有权限-->
    <select id="queryRolesJoinUserGroupByUserId" resultMap="SysRoleMap">
        select
        r.id, r.code, r.name, r.status, r.description, r.level, r.pid, r.seq, r.created_by, r.updated_by, r.ctime, r.utime
        from sys_role as r, sys_group_role as gr, sys_user_group as ug
        where
        r.id=gr.rid and gr.gid=ug.gid and ug.uid=#{id} and r.`status`=0
    </select>


    <!--查询用户所有角色-->
    <select id="queryAllRolesByUserId" resultMap="SysRoleMap">
        select
        DISTINCT
        k.id, k.code, k.name, k.status, k.description, k.level, k.pid, k.seq, k.created_by, k.updated_by, k.ctime, k.utime
        from (  select
                r.id, r.code, r.name, r.status, r.description, r.level, r.pid, r.seq, r.created_by, r.updated_by, r.ctime, r.utime
                from sys_role as r
                left join sys_user_role as ur
                on r.id=ur.rid
                where ur.uid=#{id} and r.`status`=0
        union all
        select
        r.id, r.code, r.name, r.status, r.description, r.level, r.pid, r.seq, r.created_by, r.updated_by, r.ctime, r.utime
        from
        sys_role as r, sys_group_role as gr, sys_user_group as ug
        where r.id=gr.rid and gr.gid=ug.gid and ug.uid=#{id}) as k
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="SysRoleMap">
        select
          id, code, name, status, description, level, pid, seq, created_by, updated_by, ctime, utime
        from lark_security.sys_role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="code != null and code != ''">
                and code = #{code}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
            <if test="level != null">
                and level = #{level}
            </if>
            <if test="pid != null">
                and pid = #{pid}
            </if>
            <if test="seq != null">
                and seq = #{seq}
            </if>
            <if test="createdBy != null and createdBy != ''">
                and created_by = #{createdBy}
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                and updated_by = #{updatedBy}
            </if>
            <if test="ctime != null">
                and ctime = #{ctime}
            </if>
            <if test="utime != null">
                and utime = #{utime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into lark_security.sys_role(code, name, status, description, level, pid, seq, created_by, updated_by, ctime, utime)
        values (#{code}, #{name}, #{status}, #{description}, #{level}, #{pid}, #{seq}, #{createdBy}, #{updatedBy}, now(), now())
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update lark_security.sys_role
        <set>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="pid != null">
                pid = #{pid},
            </if>
            <if test="seq != null">
                seq = #{seq},
            </if>
            <if test="createdBy != null and createdBy != ''">
                created_by = #{createdBy},
            </if>
            <if test="updatedBy != null and updatedBy != ''">
                updated_by = #{updatedBy},
            </if>
            <if test="ctime != null">
                ctime = #{ctime},
            </if>
            utime = now(),
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from lark_security.sys_role where id = #{id}
    </delete>

</mapper>